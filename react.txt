firstapp:

import React, { Component } from 'react';
//import ReactDOM from 'react-dom/client';
import './index.css'; 
import logo from './earth1.avif';
import video from './video1.mp4';
import audio from './audio.mp3';


class Fruits extends React.Component {
  render() {
    return (
      <div style={{ display: 'flex', justifyContent: 'space-evenly'}}>
        <Apple />
        <Banana />
        <Pineapple />
        <LoginForm />
      </div>
    );
  }
}
class Apple extends Component {
  render() {
    return (
      <div>
        <video src={video} className="video" controls width="100%" height="100%"/> 
      </div>
    );
  }
}

class Banana extends Component {
  render() {
    return (
      <div style={{padding:'0px 260px 0px 60px'}}>
        <img src={logo} className="logo" alt="logo" width="400%" height="100%"/>
      </div>
    );
  }
}

class Pineapple extends Component {
  render() {
    return (
      <div>
        <audio src={audio} className="audio" controls /> 
      </div>
    );
  }
}

class LoginForm extends Component {
  

  render() {
    return (
      <form id="registerForm">
        <h2 style={{ textAlign: 'center' }}>LOGIN</h2>
        <div style={{ display: 'grid', justifyContent: 'space-evenly', border: '10px', padding: '10px 30px 10px 35px' }}>
          <div style={{ borderStyle: 'ridge', padding: '40px' }}>
            <label htmlFor="newUsername">Username:</label>
            <input type="text" id="newUsername" name="newUsername" required /><br /><br />
            <label htmlFor="Password">Password:</label>
            <input type="password" id="Password" name="Password" required /><br /><br />
            <div style={{ display: 'flex', justifyContent: 'center' }}>
              <button type="button">Login</button>
            </div>
          </div>
        </div>
      </form>
    );
  }
}



export default Fruits;
 
index.js:
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css'; // Import CSS if needed
import Mango from './App';
import orange from './register';
// import reportWebVitals from './reportWebVitals'; 
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  
    <Mango />
  
);
const boot = ReactDOM.createRoot(document.getElementById('boot'));
boot.render(
 
    <orange />
  
);


secondapp:
toggle:
/*import logo from './logo.svg';
import './App.css';

function App() {
  return (
    <div className="App">
      <header className="App-header">
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
        </p>
        <a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Learn React
        </a>
      </header>
    </div>
  );
}

export default App;
*/

//used to contain data or information about the component. The state in a component can change over time. A component with the state is known as stateful components. It is the heart of the react component which determines the behavior of the component and how it will render. A state must be kept as simple as possible. It can be set by using the setState() method and calling setState() method triggers UI updates. To set an initial state before any interaction occurs, we need to use the getInitialState() method.To define a state, you have to first declare a default set of values for defining the component's initial state. To do this, add a class constructor which assigns an initial state using this.state. The 'this.state' property can be rendered inside render() method.
/*
import React from 'react';  
class App extends React.Component {  
 constructor() {  
      super();        
      this.state = { myinfo: true };  
      }  
      render() {  
          const mango = this.state.myinfo ? (  
              <div>  
                  <p><h3>used to contain data or information about the component. The state in a component can change over time. A component with the state is known as stateful components. It is the heart of the react component which determines the behavior of the component and how it will render. A state must be kept as simple as possible. It can be set by using the setState() method and calling setState() method triggers UI updates. To set an initial state before any interaction occurs, we need to use the getInitialState() method.To define a state, you have to first declare a default set of values for defining the component's initial state. To do this, add a class constructor which assigns an initial state using this.state. The 'this.state' property can be rendered inside render() method.</h3></p>   
            </div>  
              ) : null;  
              return (  
                  <div>  
                      <h1> Welcome to Mango city </h1>  
                      { mango }   
                  </div>  
              );  
     }  
}  
export default App; */


import Meenakshi from 'react';  
class App extends Meenakshi.Component {  
 constructor() {  
      super();        
      this.state = { myinfo: false };  
      //console.log('Component this', this);  
      this.togglemyBio = this.togglemyBio.bind(this);  
      }  
      togglemyBio(){  
          this.setState({myinfo: !this.state.myinfo});  
          }  
      render() {  
          return (  
              <div>  
                  <h1>Welcome to Mango city</h1>  
                  {  
                      this.state.myinfo ? (   
                          <div>  
                              <form id="registerForm">
        <h2 style={{ textAlign: 'center' }}>LOGIN</h2>
        <div style={{ display: 'grid', justifyContent: 'space-evenly', border: '10px', padding: '10px 30px 10px 35px' }}>
          <div style={{ borderStyle: 'ridge', padding: '40px' }}>
            <label htmlFor="newUsername">Username:</label>
            <input type="text" id="newUsername" name="newUsername" required /><br /><br />
            <label htmlFor="Password">Password:</label>
            <input type="password" id="Password" name="Password" required /><br /><br />
            <div style={{ display: 'flex', justifyContent: 'center' }}>
              <button type="button">Login</button>
            </div>
          </div>
        </div>
      </form>
                              <button onClick={this.togglemyBio}> Show Less </button>  
                        </div>  
                          ) : (  
                              <div>  
                                  <button onClick={this.togglemyBio}> Read More </button>  
                              </div>  
                          )  
                  }  
             </div>  
        )  
    }  
}  
export default App;   

/*
import React from 'react';  
class App extends React.Component {  
   render() {     
      return (  
          <div>  
            <h1> Mangos are imported from { this.props.name } </h1>    
            <p> <h4> Welcome to Mango city </h4> </p>          
          </div>  
      );  
   }  
}  
export default App;  
*/
/*
import React from 'react';  
class App extends React.Component {  
   render() {     
      return (  
          <div>  
              <h1>Thats the property </h1>  
            <h3>Welcome to {this.props.name}</h3>   
            <p>Mango city are guntur or salem?</p>          
          </div>  
        );  
    }  
}  
App.defaultProps = {  
   name: "Salem"  
}  
export default App; */

index.js:
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css'; // Import CSS if needed
import Mango from './App';
// import reportWebVitals from './reportWebVitals'; 
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  
    <Mango name='vijayawada'/>
  
);
  
app.js sir project:
import React, { Component } from 'react';
import './index.css';

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {
      isLoggedIn: false,
    };
  }

  handleLogin = () => {
    const username = document.getElementById('newUsername').value;
    const password = document.getElementById('Password').value;
    if (username && password) {
      this.setState({ isLoggedIn: true });
    } else {
      alert('Please enter both username and password.');
    }
  };

  handleLogout = () => {
    this.setState({ isLoggedIn: false });
  };

  render() {
    const { isLoggedIn } = this.state;

    return (
      <div style={{ display: 'grid', justifyContent: 'space-evenly' }}>
        {!isLoggedIn ? (
          <RegisterForm handleLogin={this.handleLogin} />
        ) : (
          <Table handleLogout={this.handleLogout} />
        )}
      </div>
    );
  }
}

class RegisterForm extends Component {
  render() {
    return (
      <form id="registerForm">
        <h2 style={{ textAlign: 'center' }}>LOGIN</h2><br />

        <div style={{ display: 'grid', justifyContent: 'space-evenly', border: '10px solid', padding: '10px 30px 10px 35px' }}>
          <div style={{ borderStyle: 'ridge', padding: '40px' }}>
            <label htmlFor="newUsername">Username:</label>
            <input type="text" id="newUsername" name="newUsername" required /><br /><br />
            <label htmlFor="Password">Password:</label>
            <input type="password" id="Password" name="Password" required /><br /><br />
            <div style={{ display: 'flex', justifyContent: 'center' }}>
              <button type="button" onClick={this.props.handleLogin}>Login</button>
            </div>
          </div>
        </div>
      </form>
    );
  }
}

class Table extends Component {
  constructor(props) {
    super(props);
    this.state = {
      timer: 60,
    };
  }

  componentDidMount() {
    this.interval = setInterval(() => {
      this.setState(prevState => {
        if (prevState.timer <= 1) {
          clearInterval(this.interval);
          alert('Time is up!');
          this.props.handleLogout();
          return { timer: 0 };
        }
        return { timer: prevState.timer - 1 };
      });
    }, 1000);
  }

  componentWillUnmount() {
    clearInterval(this.interval);
  }

  editRow = (button) => {
    const row = button.closest('tr');
    const inputs = row.querySelectorAll('input');
    const isReadOnly = inputs[0].readOnly;
    inputs.forEach(input => input.readOnly = !isReadOnly);
    button.textContent = isReadOnly ? 'Save' : 'Edit';
  };

  deleteRow = (button) => {
    const row = button.closest('tr');
    row.remove();
  };

  render() {
    const { timer } = this.state;
    const minutes = Math.floor(timer / 60).toString().padStart(2, '0');
    const seconds = (timer % 60).toString().padStart(2, '0');

    return (
      <div style={{ display: 'grid', justifyContent: 'space-evenly', padding: '70px 10px 140px', background: 'transparent' }}>
        <h1 style={{ textAlign: 'center' }}>Employee details</h1>

        <table border="10" style={{ background: 'pink' }}>
          <thead>
            <tr>
              <th>Empid</th>
              <th>Empname</th>
              <th>Age</th>
              <th>Email</th>
              <th>Address</th>
              <th>Salary</th>
              <th>Options</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td><input type="number" name="empid" value="1" readOnly /></td>
              <td><input type="text" name="empname" value="Sashi" readOnly /></td>
              <td><input type="number" name="age" value="19" readOnly /></td>
              <td><input type="email" name="email" value="sessi@gmail.com" readOnly /></td>
              <td><input type="text" name="address" value="guntur" readOnly /></td>
              <td><input type="number" name="salary" value="8765456" readOnly /></td>
              <td>
                <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </button>
                <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                </button>
              </td>
            </tr>
            <tr>
              <td><input type="number" name="empid" value="2" readOnly /></td>
              <td><input type="text" name="empname" value="Aslam" readOnly /></td>
              <td><input type="number" name="age" value="19" readOnly /></td>
              <td><input type="email" name="email" value="sei@gmail.com" readOnly /></td>
              <td><input type="text" name="address" value="tirupati" readOnly /></td>
              <td><input type="number" name="salary" value="764356" readOnly /></td>
              <td>
                <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </button>
                <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                </button>
              </td>
            </tr>
            <tr>
              <td><input type="number" name="empid" value="3" readOnly /></td>
              <td><input type="text" name="empname" value="Ali" readOnly /></td>
              <td><input type="number" name="age" value="19" readOnly /></td>
              <td><input type="email" name="email" value="sasmi@gmail.com" readOnly /></td>
              <td><input type="text" name="address" value="narasarao" readOnly /></td>
              <td><input type="number" name="salary" value="6543456" readOnly /></td>
              <td>
                <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </button>
                <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                </button>
              </td>
            </tr>
            <tr>
              <td><input type="number" name="empid" value="4" readOnly /></td>
              <td><input type="text" name="empname" value="ranbir" readOnly /></td>
              <td><input type="number" name="age" value="19" readOnly /></td>
              <td><input type="email" name="email" value="barfi@gmail.com" readOnly /></td>
              <td><input type="text" name="address" value="dubai" readOnly /></td>
              <td><input type="number" name="salary" value="8783456" readOnly /></td>
              <td>
                <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </button>
                <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                </button>
              </td>
            </tr>
            <tr>
              <td><input type="number" name="empid" value="5" readOnly /></td>
              <td><input type="text" name="empname" value="shah rukh" readOnly /></td>
              <td><input type="number" name="age" value="19" readOnly /></td>
              <td><input type="email" name="email" value="shan@gmail.com" readOnly /></td>
              <td><input type="text" name="address" value="delhi" readOnly /></td>
              <td><input type="number" name="salary" value="8765456" readOnly /></td>
              <td>
                <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </button>
                <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                </button>
              </td>
            </tr>
            <tr>
              <td><input type="number" name="empid" value="6" readOnly /></td>
              <td><input type="text" name="empname" value="Salman" readOnly /></td>
              <td><input type="number" name="age" value="19" readOnly /></td>
              <td><input type="email" name="email" value="salmai@gmail.com" readOnly /></td>
              <td><input type="text" name="address" value="bombay" readOnly /></td>
              <td><input type="number" name="salary" value="8765456" readOnly /></td>
              <td>
                <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </button>
                <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                  <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                </button>
              </td>
            </tr>
          </tbody>
        </table><br />
        <div style={{ display: 'flex', justifyContent: 'center' }}>
          <button style={{ width: '55px' }} onClick={this.props.handleLogout}>Logout</button>
        </div>
        <div id="time" style={{ textAlign: 'center', fontSize: '24px' }}>
          {minutes}:{seconds}
        </div>
      </div>
    );
  }
}

export default App;

app.js my project:

import React, { Component } from 'react';
import './index.css'; 

class Registerdetails extends Component {
  render() {
    return (
      <div style={{ display: 'grid', justifyContent: 'space-evenly'}}>
        <RegisterForm/>
        <Table/>
      </div>
    );
  }
}

class RegisterForm extends Component {
  login() {
    const username = document.getElementById('newUsername').value;
    const password = document.getElementById('Password').value;
    if (username && password) {
      window.location.href = 'Table';
    } else {
      alert('Please enter both username and password.');
    }
  }

  render() {
    return (
      <form id="registerForm">
        <h2 style={{ textAlign: 'center' }}>LOGIN</h2><br />

        <div style={{ display: 'grid', justifyContent: 'space-evenly', border: '10px solid', padding: '10px 30px 10px 35px' }}>
          <div style={{ borderStyle: 'ridge', padding: '40px' }}>
            <label htmlFor="newUsername">Username:</label>
            <input type="text" id="newUsername" name="newUsername" required /><br /><br />
            <label htmlFor="Password">Password:</label>
            <input type="password" id="Password" name="Password" required /><br /><br />
            <div style={{ display: 'flex', justifyContent: 'center' }}>
              <button type="button" onClick={() => this.login()}>Login</button>
            </div>
          </div>
        </div>
      </form>
    );
  }
}


class Table extends Component {
  componentDidMount() {
    const oneMinute = 60;
    const display = document.querySelector('#time');
    this.startTimer(oneMinute, display);
  }

  startTimer(duration, display) {
    let timer = duration, minutes, seconds;
    const interval = setInterval(() => {
      minutes = parseInt(timer / 60, 10);
      seconds = parseInt(timer % 60, 10);

      minutes = minutes < 10 ? '0' + minutes : minutes;
      seconds = seconds < 10 ? '0' + seconds : seconds;

      if (display) {
        display.textContent = minutes + ":" + seconds;
      }

      if (--timer < 0) {
        clearInterval(interval);
        alert('Time is up!');
        this.logout(); // Call the logout function
      }
    }, 1000);
  }

  logout() {
    // Clear interval if exists
    if (this.interval) {
      clearInterval(this.interval);
    }
    // Navigate to RegisterForm (or you can handle it with React state)
    window.location.href = 'RegisterForm';
  }

  editRow(button) {
    const row = button.closest('tr');
    const inputs = row.querySelectorAll('input');
    const isReadOnly = inputs[0].readOnly;
    inputs.forEach(input => input.readOnly = !isReadOnly);
    button.textContent = isReadOnly ? 'Save' : 'Edit';
  }

  deleteRow(button) {
    const row = button.closest('tr');
    row.remove();
  }

  render() {
    return (
      <>
        <div style={{ display: 'flex', justifyContent: 'flex-end', padding: '10px 0px 10px', background: 'ghostwhite' }}>
          <span id="time" style={{ height: '30px', background: 'orangered', color: 'white', padding: '5px' }}>01:00</span>&nbsp;&nbsp;
          <button type="button" onClick={() => this.logout()} style={{ height: '30px', background: 'skyblue', color: 'white' }}>
            <i className="fa fa-sign-out" aria-hidden="true"></i> Logout
          </button>
        </div>
        <div style={{ display: 'grid', justifyContent: 'space-evenly', padding: '70px 10px 140px', background: 'transparent' }}>
          <h1 style={{ textAlign: 'center' }}>Employee details</h1>

          <table border="10" style={{ background: 'pink' }}>
            <thead>
              <tr>
                <th>Empid</th>
                <th>Empname</th>
                <th>Age</th>
                <th>Email</th>
                <th>Address</th>
                <th>Salary</th>
                <th>Options</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><input type="number" name="empid" value="1" readOnly /></td>
                <td><input type="text" name="empname" value="Sashi" readOnly /></td>
                <td><input type="number" name="age" value="19" readOnly /></td>
                <td><input type="email" name="email" value="sessi@gmail.com" readOnly /></td>
                <td><input type="text" name="address" value="guntur" readOnly /></td>
                <td><input type="number" name="salary" value="8765456" readOnly /></td>
                <td>
                  <button onClick={(e) => this.editRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                    <i className="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                  </button>
                  <button onClick={(e) => this.deleteRow(e.target)} style={{ color: 'skyblue', display: 'inline' }}>
                    <i className="fa fa-trash-o" aria-hidden="true"></i> Delete
                  </button>
                </td>
              </tr>
              {/* Add other rows similarly */}
            </tbody>
          </table><br />
          <div style={{ display: 'flex', justifyContent: 'center' }}>
            <button style={{ width: '55px' }}>Submit</button>
          </div>
        </div>
      </>
    );
  }
}


export default Registerdetails;







thirdapp:
app.js age :
import React from 'react';  
class App extends React.Component {  
  constructor() {  
      super();  
      this.state = {age: '100'};  
      this.handleChange = this.handleChange.bind(this);  
      this.handleSubmit = this.handleSubmit.bind(this);  
  }  
  handleChange(event) {  
      this.setState({age: event.target.value});  
  }  
  handleSubmit(event) {  
      alert('You have submitted the input successfullys: ' + this.state.age);  
      //event.preventDefault();  
  }  
  render() {  
      return (  
          <form onSubmit={this.handleSubmit}>  
            <h1>Chalapathi staff control forms</h1>  
            <label>  
                Name:  
                <input type="text" value={this.state.age} onChange={this.handleChange} />  
            </label>  
            <input type="submit" value="Submit" />  
         </form>  
      );  
  }  
}  
export default App;
